{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Z",
	"patterns": [
		{
			"include": "#string"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#hex"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#file"
		},
		{
			"include": "#tags"
		},
		{
			"include": "#types"
		},
		{
			"include": "#special"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#punctuation"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.action.z",
				"match": "(?i)(?<!\\w-)\\b(ACCEPT|ADD|ALC|ARM|AUTHOR|BOX|CALL|CHAINR?|CHANGE|CLOSE|COMPUTE|COPY|CURSOR|DEF(INE)?|DELETE|DISPLAY|DIVIDE|END-PERFORM|ENDEF|ERASE|ERROR|EOJ|EXIT|FD|GEN|GIVING|GO(\\s*TO)?|(?<=^\\s*)INDEX|(?<!OPEN\\s+)INPUT|INSERT|INSPECT|LET|LIST(LJ)?|(?<=^\\s*)LOCK|MAP|MARGIN|MESSAGE|MOVE|MULTIPLY|NEXT\\s+SENTENCE|OPEN|PASSWORD|PERFORM|PRINT|PROMPTS?|READ(L|SC)?(\\s+(NEXT|PREV))?|REDEFINE|REDISPLAY|RETRY|REWRITE|SCI|SET|SHOW|SORT(MEM)?|START|SUBTRACT|TAB|TRANSLATE|UNLOCK|WADSP|WORK|WRITE)\\b(?!-)"
			},
			{
				"name": "constant.regexp.z",
				"match": "(?i)(?<!\\w-)\\b(ACCEPT|ADD|ADJ|ALC|ALL|ALPHABETIC|AND|ARM|AS|ASC(ENDING)?|AT|AUTHOR|BACKSPACE|BATCH|BEEP|BLINK|BOX|BY|CALL|CHAINR?|CHANGE|CLOSE|COMPUTE|COPY|CR|CURSOR|DES(CENDING)?|DEF(INE)?|DELETE|DEPENDING\\s+ON|DISPLAY|DIVIDE|DOWN|ECHO|EDIT|ELSE|END|END-PERFORM|ENDEF|ENDIF|EOJ|ERASE|ERROR|ERROR-MODE|EOFXITFD|EQUALS?|EXIT|EXTEND|FD|FORWARDSPACE|FROM|GE|GEN|GIVING|GO(TO)?|GR|GRAPHICS|GREATER|HEX|HI(GH)?|I-O|IF|INDEX|INPUT|INPUT-TAB|INSERT|INSPECT|INVALID|KEY|LAST|LE|LEFT|LESS|LET|LINE(LEN|NO)?|LINK|LIST(LJ)?|LIT|LOCK|LOW?|MAP|MARGIN|MESSAGE|MOVE|MULTIPLY|NE|NEGATIVE|NEW|NEXT|NL|NOCHG|NOCLEAR|NOFLOAT|NOGP|NOHDR|NOIO|NOLINK|NORM|NOSCREEN|NOT|NUMERIC|OMA-TAB|OFF|OFFSET|ON|OPEN|OR|OUTPUT|PAGELEN|PASSWORD|PERFORM|POS(ITION)?|POSITIVE|PREV|PRINT|PROMPTS?|READ(L|SC)?|REDEFINE|REDISPLAY|REMAINDER|RETRY|REWIND|REWRITE|RIGHT|RJ|ROUNDED|SCI|SECURE|SENTENCE|SET|SHOW|SIZE|SORT(MEM)?|SPACES?|START|SUBTRACT|SVC|TABR?|TAG|TALLYING|THAN|THROUGH|THRU|TIMES|TRAILING|TRANSLATE|TO|UNLOCK|UNTIL|UP|USING|VARYING|VIA|WADSP|WARN(ING)?|WORK|WRITE|ZERO(E?S)?)\\b(?!-)"
			}]
		},
		"string": {
			"name": "string.quoted.single.z",
			"begin": "'",
			"end": "'"
		},
		"strings": {
			"name": "string.quoted.double.z",
			"begin": "\"",
			"end": "\""
		},
		"comments": {
			"name": "comment.line.z",
			"match": "(^\\s*(\\*|--|:).*$)|(\\s:\\s*.*$)"
		},
		"numbers": {
			"name": "constant.numeric.z",
			"match": "(?i)(?<!\\w)-?\\+?\\b(\\d+((\\.|,)\\d+)*)\\b(?!-)"
		},
		"variables": {
			"name": "variable.other.z",
			"match": "\\b[\\w-]+\\b"
		},
		"tags": {
			"name": "entity.name.function.z",
			"match": "(?im)\\b(\\d+-[\\w-]+)|((?<=((GO(\\s*TO)?)|(PERFORM)|(RETRY))\\s+)[\\w-]+)|(^[\\w-]+(?=\\.))|((?<=^(TAG\\s+)?)[\\w-]+\\.?\\s*$)|((?<=\\s+(THRU|THROUGH)\\s+)[\\w-]+)\\b",
			"patterns": [
				{
					"includes": "#keywords"
				}
			]
		},
		"operators": {
			"name": "constant.regexp.operators.z",
			"match": "(?i)(?<!-)(\\+|\\s(-|\\*)\\s|/|=|>|<|>=|<=|\\b(AND|OR|NOT|XOR|GREATER|LESS|EQUAL|THAN|GT|LT|EQ|LE|GE|NE)\\b)(?!-)"
		},
		"types": {
			"name": "entity.name.type.z",
			"match": "(?i)(?<=((RE)?DEF(INE)?\\s+)?[\\w-]+\\s+)\\b(GP|BI|SB|AN|UN|SN|SP|UP|DEC|RECLEN|OCCURS)(?=\\s*((\\s+:.*)?$|\\s\\d+))\\b"
		},
		"special": {
			"name": "constant.character.special.z",
			"match": "(?i)(?<=CALL\\s+)\\b[\\w$-]+\\b"
		},
		"file": {
			"name": "constant.character.file.z",
			"match": "(?i)(?<=^FD\\s+)\\b[\\w-]+\\b"
		},
		"hex": {
			"name": "string.regexp.z",
			"match": "(?i)(>\\b[\\w-]+)|(?<=GR(APHICS)?)(\\b)\\b"
		},
		"punctuation": {
			"name": "punctuation.terminator.z",
			"match": "\\.|,"
		}
	},
	"scopeName": "source.z"
}